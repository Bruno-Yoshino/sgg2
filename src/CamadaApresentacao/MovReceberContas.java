package CamadaApresentacao;

import CamadaLogica.ReadOnlyTableModel;
import CamadaLogica.Relatorio;
import CamadaNegocio.Cheque;
import Controller.ReceberContaController;
import java.sql.SQLException;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import util.SystemControl;
import util.mensagens;

/**
 *
 * @author 吉野　廉
 * @author 羽根川　翼
 * @author モニカ
 * @author 巴御前
 * @author 高村　結衣
 * @author 里川　麗奈
 * @author 川波　愁子
 * @author 水川　鈴奈
 * @author 嶌田　治奈
 * @author 小枩　夏輝
 * @author ウィリアム
 * @author レレイナ
 * 
 * Tester 2019年07月27日
 * @author 伊吹
 * @author 雲龍
 * @author 天城
 */
public class MovReceberContas extends javax.swing.JDialog {

    private final SystemControl sc = new SystemControl();
    private final mensagens m = new mensagens();
    private final ReceberContaController rcc = new ReceberContaController();
    private int forma;
    private final Relatorio rel = new Relatorio();
    
    public MovReceberContas(java.awt.Frame parent, boolean modal) throws SQLException {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        ReceberContaController.configuraModel(jTable1);
        btnAlterar.setName("btnAlterar");
        btnCancelar.setName("btnCancelar");
        btnGravar.setName("btnGravar");
        btnSair.setName("btnSair");
        btnImprimir.setName("btnImprimir");
        btnExtornar.setName("btnExtornar");
        btnAdicionar.setName("btnAdicionar");
        btnRemover.setName("btnRemover");
        sc.Alter(jPanel3.getComponents());
        sc.HabilityComponents(jPanel2.getComponents(), false);
        sc.HabilityComponents(jPanel4.getComponents(), false);
        rcc.carregarTabela(jTable1, 1);
        Cheque.configuraModel(jTable2);
        //jPanel4.setVisible(false);

    }
    
    /*
        2019年07月12日
            メモ：テーブルの封入がまだ行われていません。 OK
    
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        rbOP1 = new javax.swing.JRadioButton();
        rbOP2 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        dcPagamento = new br.com.marciorl.beans.DateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtValorP = new br.com.ikeda.beans.jTextFieldMonetario();
        jPanel3 = new javax.swing.JPanel();
        btnGravar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExtornar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtValorTCheque = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Clientes Devedores", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N

        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        rbOP1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        rbOP1.setSelected(true);
        rbOP1.setText("Ordenar por nome");
        rbOP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOP1ActionPerformed(evt);
            }
        });

        rbOP2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        rbOP2.setText("Ordenar por data de Vencimento");
        rbOP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOP2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbOP1)
                        .addGap(18, 18, 18)
                        .addComponent(rbOP2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbOP1)
                    .addComponent(rbOP2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Valor:");

        txtValor.setEditable(false);
        txtValor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Data do Pagamento:");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Cliente:");

        txtCliente.setEditable(false);
        txtCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Observação:");

        txtObs.setColumns(20);
        txtObs.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        txtObs.setRows(5);
        jScrollPane2.setViewportView(txtObs);

        dcPagamento.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Valor Recebido:");

        txtValorP.setText(".0");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCliente))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabel11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtValorP, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dcPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtValorP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dcPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Gravar16.png"))); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Sair.png"))); // NOI18N
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Cancelar16.png.jpg"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Imprimir16.png"))); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Alterar16.png"))); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExtornar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/extornar16.jpg"))); // NOI18N
        btnExtornar.setText("Estornar");
        btnExtornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtornarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExtornar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSair, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGravar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExtornar, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Cheque"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable2);

        btnAdicionar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Valor total do Cheque recebido:");

        txtValorTCheque.setEditable(false);
        txtValorTCheque.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorTCheque, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(btnRemover)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtValorTCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        jMenu1.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem1.setText("Ajuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbOP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOP1ActionPerformed
        if(rbOP1.isSelected())
        {
            rbOP2.setSelected(false);
            try {
                sc.limparTabela(jTable1);
                rcc.carregarTabela(jTable1, 1);
            } catch (SQLException ex) {
                Logger.getLogger(MovReceberContas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rbOP1ActionPerformed

    private void rbOP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOP2ActionPerformed
        if(rbOP2.isSelected())
        {
            rbOP1.setSelected(false);
            try {
                sc.limparTabela(jTable1);
                rcc.carregarTabela(jTable1, 2);
            } catch (SQLException ex) {
                Logger.getLogger(MovReceberContas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rbOP2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(evt.getClickCount() == 2)
        {
            btnAlterarActionPerformed(null);
            
            //Check this is Cheque ok
            //Is true, Hability ok
            //Is false, No Hability ok
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
       if(jTable1.getSelectedRow() >= 0)
       {
          sc.limparTabela(jTable2);
          ReadOnlyTableModel model = (ReadOnlyTableModel) jTable1.getModel();
          if(rcc.verificaConta(Integer.parseInt(sc.converteString(model.getValueAt(jTable1.getSelectedRow(), 1))), Integer.parseInt(sc.converteString(model.getValueAt(jTable1.getSelectedRow(), 5)))))
          {
            txtCliente.setText(""+model.getValueAt(jTable1.getSelectedRow(), 0));
            txtValor.setText(""+model.getValueAt(jTable1.getSelectedRow(), 2));
            sc.Edity(jPanel3.getComponents());
            jTable1.setEnabled(false);
            sc.HabilityComponents(jPanel1.getComponents(), false);
            sc.HabilityComponents(jPanel2.getComponents(), true);
              try {
//              try
//              {
//                  rcc.buscar(Integer.valueOf(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 5))));
//              } catch (SQLException ex) {
//                  Logger.getLogger(MovReceberContas.class.getName()).log(Level.SEVERE, null, ex);
//              }
              forma = rcc.buscar(Integer.valueOf(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 1))));
              } catch (SQLException ex) {
                  Logger.getLogger(MovReceberContas.class.getName()).log(Level.SEVERE, null, ex);
              }
            //if(rcc.getCr().getP().getFp().getCodigo() == 4)
            if(forma == 4)
            {
                //jPanel4.setVisible(true);
//                if(m.Pergunta("Deseja lançar o cheque agora?", "Pergunta") == JOptionPane.YES_OPTION)
//                {
//                    
//                }
                sc.HabilityComponents(jPanel4.getComponents(), true);
            }
            //rcc.carregarCheques(Integer.valueOf(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 5))), jTable2);
            //else
                //jPanel4.setVisible(false);
          }
          else
          {
             m.InformationMessage("Existe parcelas anteriores que ainda não foram pagos!", "Informação");
          }
       }
       else
       {
         JOptionPane.showMessageDialog(this, "Você deve selecionar um registro", "Informação", JOptionPane.INFORMATION_MESSAGE);   
       }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        sc.limpar(jPanel2.getComponents());
        sc.Alter(jPanel3.getComponents());

        if(forma == 4)
            rcc.CleanUpCheque(Integer.valueOf(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 5))));
        sc.HabilityComponents(jPanel2.getComponents(), false);
        sc.HabilityComponents(jPanel1.getComponents(), true);
        sc.HabilityComponents(jPanel4.getComponents(), false);
        dcPagamento.setData(Date.from(Instant.now()));
        jTable1.setEnabled(true);
        txtValorP.setText("0");
        txtValorTCheque.setText("0");
        sc.limparTabela(jTable2);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        ReadOnlyTableModel model = (ReadOnlyTableModel) jTable1.getModel();
        try {
            //String codigoC, String valorPag, Date pagamento, String obs
            switch(rcc.validarContasReceber(String.valueOf(model.getValueAt(jTable1.getSelectedRow(), 5)).replace(",", "."), txtValorP.getText().replace(",", "."), dcPagamento.getData(), txtObs.getText()))
            {
                case 1: m.InformationMessage("Informe o valor a ser Recebido!", "Atenção"); txtValorP.requestFocus(); break;
                case 2: m.InformationMessage("Valor precisa ser maior ou igual a 0!", "Atenção"); txtValorP.requestFocus(); break;
                case 3: m.InformationMessage("Altera o valor Recebido", "Atenção"); txtValorP.requestFocus(); break;
                case 4: m.InformationMessage("A data do pagamento não pode ser menor que a data do Pedido!", "Atenção"); txtValorP.requestFocus(); break;
                case 5:
                    rcc.alterar();
                    if(rcc.SeocndInserting())
                    {
                        m.InformationMessage("Lançado e Alterado com Sucesso!", "Atenção");
                        //btnCancelarActionPerformed(null);
                        try {
                            rcc.carregarTabela(jTable1, rbOP1.isSelected() ? 1 : 2);
                            sc.limparTabela(jTable2);
                        } catch (SQLException ex) {
                            Logger.getLogger(MovPagarContas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    else
                    {
                        m.ErroMessage("ERRO ao gerar nova parcela!", "ERRO");
                    }
                    sc.limparTabela(jTable1);
                    rcc.carregarTabela(jTable1, rbOP1.isSelected() ? 1 : 2);
                    sc.HabilityComponents(jPanel2.getComponents(), false);
                    sc.HabilityComponents(jPanel1.getComponents(), true);
                    sc.HabilityComponents(jPanel4.getComponents(), false);
                    dcPagamento.setData(Date.from(Instant.now()));
                    txtValorP.setText("0");
                    txtValorTCheque.setText("0");
                    jTable1.setEnabled(true);
                    //sc.limparTabela(jTable2);

                    break;
                default:
                    if(rcc.alterar())
                    {
                        m.InformationMessage("Alterado com Sucesso!", "Atenção");
                        sc.limpar(jPanel2.getComponents());
                        //btnCancelarActionPerformed(null);
                        try {
                            rcc.carregarTabela(jTable1, rbOP1.isSelected() ? 1 : 2);
                        } catch (SQLException ex) {
                            Logger.getLogger(MovPagarContas.class.getName()).log(Level.SEVERE, null, ex);
                        }
//                        if(rcc.getCr().getP().getFp().getCodigo() == 4)
//                        {
//                            if(m.Pergunta("Deseja lançar o cheque agora?", "Pergunta") == JOptionPane.YES_OPTION)
//                            {
//                                MovCheque frmCheque = new MovCheque(null, true, rcc.getCr().getCodigo());
//                                frmCheque.setVisible(true);
//                            }
//                        }
                        sc.limparTabela(jTable1);
                        sc.limparTabela(jTable2);
                        rcc.carregarTabela(jTable1, rbOP1.isSelected() ? 1 : 2);
                        sc.HabilityComponents(jPanel2.getComponents(), false);
                        sc.HabilityComponents(jPanel1.getComponents(), true);
                        sc.HabilityComponents(jPanel4.getComponents(), false);
                        dcPagamento.setData(Date.from(Instant.now()));
                        txtValorP.setText("0");
                        txtValorTCheque.setText("0");
                        jTable1.setEnabled(true);
                    }
                    else
                    {
                        m.ErroMessage("ERRO", "ERRO");
                    }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MovReceberContas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnExtornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtornarActionPerformed
        ConsultaPadrao consEstornoCR = new ConsultaPadrao(null, true);
        String[] vet = new String[5];
        vet[0] = "Data Vencimento";
        vet[1] = "Periodo Vencimento";
        vet[2] = "Data Pagamento";
        vet[3] = "Periodo Pagamento";
        vet[4] = "Tudo";
        consEstornoCR.configuraOpcoes(vet, 5, 4, "CEstornoCR", false);
        consEstornoCR.verificaconsulta(true);
        consEstornoCR.setVisible(true);
        if (consEstornoCR.getCodigo() != 0)
        {
            if(rcc.estornarValor(consEstornoCR.getCodigo()))///exclir cheque  OK
            {
                m.InformationMessage("Estornado com sucesso!", "Informação");
                try
                {
                    sc.limparTabela(jTable1);
                    rcc.carregarTabela(jTable1, rbOP1.isSelected() ? 1 : 2);
                } catch (SQLException ex) {
                    Logger.getLogger(MovPagarContas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                m.ErroMessage("Não pode ser estornado!", "Atenção");
            }

            consEstornoCR.dispose();
        }
        else
        {
            consEstornoCR.dispose();
            btnExtornar.requestFocus();
        }
    }//GEN-LAST:event_btnExtornarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        MovCheque frmCheque = new MovCheque(null, true, Integer.valueOf(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 5))), true);
        frmCheque.setVisible(true);
        if(frmCheque.isFlagReturn())
        {
            rcc.addTabelaCheque(jTable2);
            double tot = rcc.SumTotalCheque(jTable2);
            txtValorTCheque.setText(""+tot);
            txtValorP.setText(sc.verificaValor(tot+"")); 
            if(tot > Double.valueOf(txtValor.getText()))
            {
                if(m.Pergunta("O valor total do cheque utrapassou o valor a ser recebido! Deseja continuar?\n (sim - para continuar; não - para cancelar o cheque)", "Atenção") == JOptionPane.NO_OPTION)
                {
                    rcc.excluirUltimoCheque(jTable1);
                    tot = rcc.SumTotalCheque(jTable2);
                    txtValorTCheque.setText(""+tot);
                    txtValorP.setText(sc.verificaValor(tot+""));
                }
            }
        }
        frmCheque.dispose();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        if(rcc.excluirCheque(jTable2))
        {
            m.InformationMessage("Removido com sucesso!", "Informação");
            txtValorTCheque.setText(""+rcc.SumTotalCheque(jTable2));
        }
        else
        {
            m.ErroMessage("Erro ao excluir!", "ERRO");
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        ConsultaPadrao consEstornoCR = new ConsultaPadrao(null, true);
        String[] vet = new String[5];
        vet[0] = "Data Vencimento";
        vet[1] = "Periodo Vencimento";
        vet[2] = "Data Pagamento";
        vet[3] = "Periodo Pagamento";
        vet[4] = "Tudo";
        consEstornoCR.configuraOpcoes(vet, 5, 4, "CEstornoCR", false);
        consEstornoCR.verificaconsulta(true);
        consEstornoCR.setVisible(true);
        if (consEstornoCR.getCodigo() != 0)
        {
            gerarComprovante(consEstornoCR.getCodigo());
            consEstornoCR.dispose();
        }
        else
        {
            consEstornoCR.dispose();
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if(!sc.help("SGG/SGGOnlineHelp/movreceberc.html", "C:/"))
        {
            sc.help("SGG/SGGOnlineHelp/movreceberc.html", "D:/");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    private void gerarComprovantePagamento()
    {
        if(m.Pergunta("Deseja gerar um Comprovante de Pagamento?", "Gerar?") == JOptionPane.YES_OPTION)
        {
            ReadOnlyTableModel model = (ReadOnlyTableModel) jTable1.getModel();
            gerarComprovante(Integer.parseInt(""+model.getValueAt(jTable1.getSelectedRow(), 5))); 
        }
    }
    
    private void gerarComprovante(int codigo)
    {
        try {
            rel.ImprimirRelatorioPDF(rcc.retornaResultSet(codigo), "Relatorios\\comprovantep.jasper");
        } catch (JRException ex) {
            System.out.println(""+ex.toString());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnExtornar;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSair;
    private br.com.marciorl.beans.DateChooser dcPagamento;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JRadioButton rbOP1;
    private javax.swing.JRadioButton rbOP2;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtValor;
    private br.com.ikeda.beans.jTextFieldMonetario txtValorP;
    private javax.swing.JTextField txtValorTCheque;
    // End of variables declaration//GEN-END:variables
}
