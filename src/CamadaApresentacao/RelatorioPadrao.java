package CamadaApresentacao;

import CamadaLogica.ReadOnlyTableModel;
import CamadaLogica.Relatorio;
import CamadaNegocio.*;
import Controller.AtualizarCaixaController;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import util.SystemControl;

/**
 * @author 吉野　廉
 * @author 羽根川　翼
 * @author モニカ
 * @author 七海
 * @author 実里
 * @author 京介
 * @author 吉広
 * @author 光秀
 * @author 川村
 * @author 磐手
 * @author イントレピッド
 */
public class RelatorioPadrao extends javax.swing.JDialog {

    private int codigo;    
    private String[] vetOpcoes = new String[20];
    private SystemControl  sc = new SystemControl();
    private int tl;
    private String tabela;
    private int posDefault;
    private final int x, y;
    boolean jtableEditavel;
    private Relatorio rel = new Relatorio();
    
    public RelatorioPadrao(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        cbFlagCliente.setVisible(false);
        cbOpcao.requestFocus();
        dateInicio.setVisible(false);
        dateFim.setVisible(false);
        jla.setVisible(false);
        txtValor.setText("");
        x = txtValor.getX();
        y = txtValor.getY();
        codigo = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cbOpcao = new javax.swing.JComboBox<>();
        cbFlagCliente = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLTexto = new javax.swing.JLabel();
        txtValor = new javax.swing.JTextField();
        txtCPF = new br.com.ikeda.beans.jFormatTextCpf();
        txtCNPJ = new br.com.ikeda.beans.jFormatTextCnpj();
        dateInicio = new br.com.marciorl.beans.DateChooser();
        dateFim = new br.com.marciorl.beans.DateChooser();
        jla = new javax.swing.JLabel();
        btnLocalizar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cbOpcao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOpcaoItemStateChanged(evt);
            }
        });
        cbOpcao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbOpcaoFocusLost(evt);
            }
        });

        cbFlagCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbFlagCliente.setText("Pessoa Fisica?");
        cbFlagCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbFlagClienteKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Opção:");

        jLTexto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLTexto.setText("Valor:");

        txtValor.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorFocusGained(evt);
            }
        });
        txtValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorKeyPressed(evt);
            }
        });

        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCPFKeyPressed(evt);
            }
        });

        txtCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCNPJKeyPressed(evt);
            }
        });

        jla.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jla.setText("a");

        btnLocalizar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Localizar 32.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Sair.png"))); // NOI18N
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/pdf32.png"))); // NOI18N
        btnRelatorio.setText("Gerar Relatorio");
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLTexto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtValor)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jla)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dateFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbFlagCliente)
                .addGap(35, 35, 35)
                .addComponent(btnLocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRelatorio)
                .addGap(34, 34, 34)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLocalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)
                                    .addComponent(cbFlagCliente))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLTexto)
                                    .addComponent(txtValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(dateInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jla)
                                    .addComponent(dateFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
                .addContainerGap())
        );

        jMenu1.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem1.setText("Ajuda");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void verificaconsulta(boolean valor)
    {
        jtableEditavel = valor == true;
    }
    
    public int getCodigo()
    {
        return codigo;
    }
    
    public void configuraOpcoes(String[] vetOpcoes, int tl, int posDefault, String tabela)
    {
        this.tl = tl;
        this.vetOpcoes = vetOpcoes;
        this.posDefault = posDefault;
        this.tabela = tabela;
        this.setTitle("Localiza " + tabela);
        for (int i = 0; i < tl; i++)
        {
            cbOpcao.addItem(vetOpcoes[i]);
        }
        cbOpcao.setSelectedIndex(posDefault);
        if(tabela.equals("Cliente"))
            cbFlagCliente.setVisible(true);
    }
    
    private void ControlaComboBox() //alterar os campos conforme a opcao selecionada
    {
        String nome = (String) cbOpcao.getSelectedItem();

        dateInicio.setVisible(false);
        dateFim.setVisible(false);
        jla.setVisible(false);
        txtCNPJ.setVisible(false);
        txtCPF.setVisible(false);
        if(nome.contains("Data"))
        {
            txtValor.setVisible(false);
            dateInicio.setVisible(true);
            dateInicio.setLocation(x+105,y-3);
            jLTexto.setText("Data");
        }
        else
        {
            if(nome.contains("Periodo"))
            {
                txtValor.setVisible(false);
                dateInicio.setVisible(true);
                dateInicio.setLocation(x+105,y-3);
                jla.setVisible(true);
                jla.setLocation(x+110,y-3);
                dateFim.setVisible(true);
                dateFim.setLocation(x+115,y-3);
                jLTexto.setText("Periodo");

            }
            else
            {
                if(nome.equals("CPF"))
                {
                    txtCPF.setLocation(x+105,y-3);
                    txtCPF.setVisible(true);
                    cbFlagCliente.setVisible(false);
                    txtValor.setVisible(false);
                    jLTexto.setText("CPF");
                }
                else
                {
                    if(nome.equals("CNPJ"))
                    {
                        txtCNPJ.setLocation(x+105,y-3);
                        txtCNPJ.setVisible(true);
                        cbFlagCliente.setVisible(false);
                        txtValor.setVisible(false);
                        jLTexto.setText("CNPJ");
                    } 
                    else
                    {
                        if(tabela.equals("Cliente"))
                            cbFlagCliente.setVisible(true);
                        txtValor.setVisible(true);
                        jLTexto.setText("Valor");
                    }
                }
            }
        }
    }
    
    private void cbOpcaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOpcaoItemStateChanged
        ControlaComboBox();
    }//GEN-LAST:event_cbOpcaoItemStateChanged

    private void cbOpcaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbOpcaoFocusLost
        ControlaComboBox();
    }//GEN-LAST:event_cbOpcaoFocusLost

    private void cbFlagClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbFlagClienteKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        btnLocalizarActionPerformed(null);
    }//GEN-LAST:event_cbFlagClienteKeyPressed

    private void txtValorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorFocusGained
        txtValor.setText("");
    }//GEN-LAST:event_txtValorFocusGained

    private void txtValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        btnLocalizarActionPerformed(null);
    }//GEN-LAST:event_txtValorKeyPressed

    private void txtCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        btnLocalizarActionPerformed(null);
    }//GEN-LAST:event_txtCPFKeyPressed

    private void txtCNPJKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCNPJKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        btnLocalizarActionPerformed(null);
    }//GEN-LAST:event_txtCNPJKeyPressed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        switch(tabela)
        {
            case "Cliente": Cliente(); break;

        }
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        codigo = 0;
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2)
        {
            codigo = Integer.parseInt(String.valueOf(jTable1.getValueAt(jTable1.getSelectedRow(), 0)));
            btnRelatorioActionPerformed(null);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        String lista[] = {"PDF","Local"};
        Object valor;
        do{
            valor = JOptionPane.showInputDialog(this, "Atenção", 
                    "A geração do Relatorio será em:", JOptionPane.INFORMATION_MESSAGE,
                    null, lista, lista[0]);
        }while(valor == null);

        switch(tabela)
        {
            case "Cliente": RelCliente(valor); break;

        }
        codigo = 0;
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String caminho = "";
        switch(tabela)
        {
            case "Orçamento": caminho = "SGG/SGGOnlineHelp/relorc.html";  break;
            case "Pedido" : caminho = "SGG/SGGOnlineHelp/relped.html"; break;
        }
        if(!sc.help(caminho, "C:/"))
        {
            sc.help(caminho, "D:/");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void Cliente()
    {
        try
        {
            ResultSet rs;
            int tipo = cbOpcao.getSelectedIndex();
            Cliente.configuraModel(jTable1);
            ReadOnlyTableModel model = (ReadOnlyTableModel) jTable1.getModel();
            sc.limparTabela(jTable1);
            switch(tipo)
            {
                case 1: rs = Cliente.buscarDados(txtValor.getText(), tipo, true); break;
                
                case 2: rs = Cliente.buscarDados(txtValor.getText(), tipo, false); break;
                
                default: rs = Cliente.buscarDados(txtValor.getText(), tipo, cbFlagCliente.isSelected()); 
            }
            while (rs.next())
            {
                model.addRow(new Object[]
                {
                    rs.getInt(1), 
                    rs.getString(2), 
                    rs.getString(3),
                    rs.getString(4), 
                    rs.getString(5), 
                    rs.getString(6), 
                    rs.getString(7), 
                    rs.getString(8), 
                    rs.getBoolean(9) ? "Ativo" : "Não Ativo"
                });
            }
        } 
        catch (SQLException sqlEmp)
        {
            System.out.println("Erro: \n" + sqlEmp.toString());
        }
    }
    
    private void RelCliente(Object valor)//valor == PDF ou Local
    {
        ResultSet rs;
        int tipo = cbOpcao.getSelectedIndex();
        sc.limparTabela(jTable1);
        if(codigo == 0)
        {
            switch(tipo)
            {
                case 1: rs = Cliente.buscarDadosRel(txtValor.getText(), tipo, true); break;
                
                case 2: rs = Cliente.buscarDadosRel(txtValor.getText(), tipo, false); break;
                
                default: rs = Cliente.buscarDadosRel(txtValor.getText(), tipo, cbFlagCliente.isSelected());
            }
        }
        else
        {
            rs = Cliente.buscarDadosCodigo(codigo, cbFlagCliente.isSelected());
        }
        switch(String.valueOf(valor))
        {
            case "PDF":
            
                try {
                    if(cbFlagCliente.isSelected())
                        rel.ImprimirRelatorioPDF(rs, "Relatorios\\cliente.jasper");//D:\\SGG\\src
                    else
                        rel.ImprimirRelatorioPDF(rs, "Relatorios\\clienteJ.jasper");
                } catch (JRException ex) {
                    Logger.getLogger(RelatorioPadrao.class.getName()).log(Level.SEVERE, null, ex);
                }
            
            break;
                
            default:
                    try {
                    if(cbFlagCliente.isSelected())
                        rel.ImprimirRelatorio(rs, "Relatorios\\cliente.jasper", "Relatorio Cliente");//D:\\SGG\\src
                    else
                        rel.ImprimirRelatorio(rs, "Relatorios\\clienteJ.jasper", "Relatorio Cliente");
                } catch (JRException ex) {
                    Logger.getLogger(RelatorioPadrao.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JButton btnSair;
    private javax.swing.JCheckBox cbFlagCliente;
    private javax.swing.JComboBox<String> cbOpcao;
    private br.com.marciorl.beans.DateChooser dateFim;
    private br.com.marciorl.beans.DateChooser dateInicio;
    private javax.swing.JLabel jLTexto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jla;
    private br.com.ikeda.beans.jFormatTextCnpj txtCNPJ;
    private br.com.ikeda.beans.jFormatTextCpf txtCPF;
    private javax.swing.JTextField txtValor;
    // End of variables declaration//GEN-END:variables
}
